"use strict";(self.webpackChunknkdcv_python=self.webpackChunknkdcv_python||[]).push([[190],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return u}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),s=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},l=function(e){var n=s(e.components);return a.createElement(d.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),m=s(t),u=r,f=m["".concat(d,".").concat(u)]||m[u]||p[u]||i;return t?a.createElement(f,c(c({ref:n},l),{},{components:t})):a.createElement(f,c({ref:n},l))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,c=new Array(i);c[0]=m;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,c[1]=o;for(var s=2;s<i;s++)c[s]=t[s];return a.createElement.apply(null,c)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1007:function(e,n,t){t.d(n,{Z:function(){return m}});var a=t(7294),r="browserWindow_CU2T",i="browserWindowHeader_9KMa",c="buttons_HaVU",o="browserWindowAddressBar_ep3W",d="dot_AgBE",s="browserWindowMenuIcon_mrOC",l="bar_CAZr",p="browserWindowBody_jHfO";var m=function(e){var n=e.children,t=e.minHeight,m=e.url;return a.createElement("div",{className:r,style:{minHeight:t}},a.createElement("div",{className:i},a.createElement("div",{className:c},a.createElement("span",{className:d,style:{background:"#f25f58"}}),a.createElement("span",{className:d,style:{background:"#fbbe3c"}}),a.createElement("span",{className:d,style:{background:"#58cb42"}})),a.createElement("div",{className:o},m),a.createElement("div",{className:s},a.createElement("div",null,a.createElement("span",{className:l}),a.createElement("span",{className:l}),a.createElement("span",{className:l})))),a.createElement("div",{className:p},n))}},4511:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return d},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return u}});var a=t(7462),r=t(3366),i=(t(7294),t(3905)),c=t(1007),o=["components"],d={title:"Hand Tracking",description:"Hand Tracking Example"},s="Hand Tracking Example",l={unversionedId:"examples/hand-tracking",id:"examples/hand-tracking",title:"Hand Tracking",description:"Hand Tracking Example",source:"@site/docs/examples/hand-tracking.mdx",sourceDirName:"examples",slug:"/examples/hand-tracking",permalink:"/nkdcv-python/vi/examples/hand-tracking",tags:[],version:"current",frontMatter:{title:"Hand Tracking",description:"Hand Tracking Example"},sidebar:"docs",previous:{title:"Face Detection",permalink:"/nkdcv-python/vi/examples/face-detection"},next:{title:"Pose Estimation",permalink:"/nkdcv-python/vi/examples/pose-estimation"}},p=[{value:"Code",id:"code",children:[],level:3},{value:"Result",id:"result",children:[],level:3}],m={toc:p};function u(e){var n=e.components,d=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},m,d,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"hand-tracking-example"},"Hand Tracking Example"),(0,i.kt)("p",null,"Code example ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/khanhduy1407/nkdcv-python/blob/master/Examples/HandTrackingExample.py"},"here")),(0,i.kt)("h3",{id:"code"},"Code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py",metastring:'title="HandTrackingExample.py"',title:'"HandTrackingExample.py"'},'from nkdcv.HandTrackingModule import HandDetector\nimport cv2\n\ncap = cv2.VideoCapture(0)\ndetector = HandDetector(detectionCon=0.8, maxHands=2)\nwhile True:\n    # Get image frame\n    success, img = cap.read()\n    # Find the hand and its landmarks\n    hands, img = detector.findHands(img)  # with draw\n    # hands = detector.findHands(img, draw=False)  # without draw\n    # hands = detector.findHands(img, flipType=False)  # flipType=False if the image is reversed\n\n    if hands:\n        # Hand 1\n        hand1 = hands[0]\n        lmList1 = hand1["lmList"]  # List of 21 Landmark points\n        bbox1 = hand1["bbox"]  # Bounding box info x,y,w,h\n        centerPoint1 = hand1[\'center\']  # center of the hand cx,cy\n        handType1 = hand1["type"]  # Handtype Left or Right\n\n        fingers1 = detector.fingersUp(hand1)\n\n        if len(hands) == 2:\n            # Hand 2\n            hand2 = hands[1]\n            lmList2 = hand2["lmList"]  # List of 21 Landmark points\n            bbox2 = hand2["bbox"]  # Bounding box info x,y,w,h\n            centerPoint2 = hand2[\'center\']  # center of the hand cx,cy\n            handType2 = hand2["type"]  # Hand Type "Left" or "Right"\n\n            fingers2 = detector.fingersUp(hand2)\n\n            # Find Distance between two Landmarks. Could be same hand or different hands\n            length, info, img = detector.findDistance(lmList1[8], lmList2[8], img)  # with draw\n            # length, info = detector.findDistance(lmList1[8], lmList2[8])  # with draw\n    # Display\n    cv2.imshow("Image", img)\n    cv2.waitKey(1)\n')),(0,i.kt)("h3",{id:"result"},"Result"),(0,i.kt)(c.Z,{mdxType:"BrowserWindow"},(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Hand Tracking Example",src:t(8435).Z}))))}u.isMDXComponent=!0},8435:function(e,n,t){n.Z=t.p+"assets/images/hand_tracking_example-7310087f86924acd2924a65facbbbdaa.png"}}]);